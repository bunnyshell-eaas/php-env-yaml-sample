kind: Environment
name: 'PHP Environment with Redis'
type: primary

components:
  - kind: Helm
    name: redis-runner
    runnerImage: 'dtzar/helm-kubectl:3.8.2'
    deploy:
      - 'helm repo add bitnami https://charts.bitnami.com/bitnami'
      - |
        cat << EOF > my_values.yaml

        EOF
      - |
        helm upgrade --install --namespace {{ env.k8s.namespace }} \
          --post-renderer /bns/helpers/helm/add_labels/kustomize \
          -f my_values.yaml \
          redis bitnami/redis --version 17.3.11
      - |
        REDIS_HOST="redis-master.{{ env.k8s.namespace }}.svc.cluster.local"
    destroy:
      - 'helm uninstall redis --namespace {{ env.k8s.namespace }}'
    start:
      - 'kubectl scale --replicas=1 --namespace {{ env.k8s.namespace }} statefulset/redis-master'
      - 'kubectl scale --replicas=1 --namespace {{ env.k8s.namespace }} statefulset/redis-replicas'
    stop:
      - 'kubectl scale --replicas=0 --namespace {{ env.k8s.namespace }} statefulset/redis-master'
      - 'kubectl scale --replicas=0 --namespace {{ env.k8s.namespace }} statefulset/redis-replicas'
    exportVariables:
      - REDIS_HOST

  - kind: Application
    name: api
    gitRepo: 'git://github.com/bunnyshellosi/env-yaml-examples.git'
    gitBranch: master
    gitApplicationPath: ./apps/php/
    dockerCompose:
      build:
        context: ./apps/php/
        dockerfile: .docker/backend/Dockerfile
      command:
        - php-fpm
      environment:
        REDIS_HOST: '{{ components.redis-runner.exported.REDIS_HOST }}'
      user: '1000:1000'
      ports:
        - '9003:9003'
        - '8443:8443'
        - '8080:8080'
      deploy:
        resources:
          limits:
            memory: 750M
          reservations:
            cpus: '0.15'
            memory: 500M
    pod:
      sidecar_containers:
        - from: nginx-api
          name: nginx-api
          shared_paths:
            - path: /var/www
              target:
                path: /var/www
                container: '@parent'
              initial_contents: '@target'
    hosts:
      - hostname: api-{{env.base_domain}}
        path: /
        servicePort: 8080

  - kind: SidecarContainer
    name: nginx-api
    gitRepo: 'git://github.com/bunnyshellosi/env-yaml-examples.git'
    gitBranch: master
    gitApplicationPath: ./apps/php/.docker/nginx-api
    dockerCompose:
      build:
        context: ./apps/php/.docker/nginx-api
      environment:
        BACKEND_API_HOST: localhost
      ports:
        - '8443:8443'
        - '8080:8080'
      deploy:
        resources:
          limits:
            memory: 500M
          reservations:
            cpus: '0.10'
            memory: 350M
